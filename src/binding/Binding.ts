/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/trail/save": {
    put: operations["importTrail"];
  };
  "/poi": {
    get: operations["get_2"];
    put: operations["upsertPoi"];
  };
  "/poi/media/{id}": {
    put: operations["addMediaToPoi"];
    delete: operations["removeMediaFromPoi"];
  };
  "/place": {
    get: operations["get_4"];
    put: operations["create"];
    post: operations["update"];
  };
  "/place/media/{id}": {
    put: operations["addMedia"];
    post: operations["deleteMedia"];
  };
  "/maintenance": {
    put: operations["create_1"];
  };
  "/accessibility": {
    put: operations["createAccessibilityNotification"];
  };
  "/trail": {
    get: operations["get"];
    post: operations["updateTrail"];
  };
  "/trail/place/{id}": {
    get: operations["getByPlaceId"];
    post: operations["addPlaceToTrail"];
    delete: operations["removePlaceFromTrail"];
  };
  "/trail/media/{id}": {
    post: operations["addMediaToTrail"];
    delete: operations["removeMediaFromTrail"];
  };
  "/trail/geolocate": {
    post: operations["geoLocateTrail"];
  };
  "/place/geolocate": {
    post: operations["geolocatePlace"];
  };
  "/media": {
    post: operations["upload"];
  };
  "/import": {
    post: operations["readGpxFile"];
  };
  "/import/bulk": {
    post: operations["readBulkGpxFile"];
  };
  "/geo-trail/intersect": {
    post: operations["findTrailIntersection"];
  };
  "/accessibility/resolve": {
    post: operations["resolveNotification"];
  };
  "/trail/{id}": {
    get: operations["getById"];
    delete: operations["deleteById"];
  };
  "/trail/count": {
    get: operations["getCount"];
  };
  "/raw": {
    get: operations["get_1"];
  };
  "/raw/{id}": {
    get: operations["getById_1"];
    delete: operations["deleteById_1"];
  };
  "/preview": {
    get: operations["getTrailPreviews"];
  };
  "/preview/{id}": {
    get: operations["getPreviewById"];
  };
  "/preview/raw": {
    get: operations["getRawTrailPreviews"];
  };
  "/poi/{id}": {
    get: operations["get_3"];
    delete: operations["deletePoi"];
  };
  "/poi/type/{type}": {
    get: operations["getByMacro"];
  };
  "/poi/name/{name}": {
    get: operations["getByNameOrTags"];
  };
  "/poi/count": {
    get: operations["getCount_1"];
  };
  "/poi/code/{code}": {
    get: operations["getByTrail"];
  };
  "/place/{id}": {
    get: operations["get_5"];
    delete: operations["delete"];
  };
  "/place/name/{name}": {
    get: operations["getLikeNameOrTags"];
  };
  "/media/{id}": {
    get: operations["getById_2"];
    delete: operations["deleteById_2"];
  };
  "/maintenance/past": {
    get: operations["getPastMaintenance"];
  };
  "/maintenance/past/{id}": {
    get: operations["getPastMaintenanceById"];
  };
  "/maintenance/past/count": {
    get: operations["getCountPast"];
  };
  "/maintenance/future": {
    get: operations["getFutureMaintenance"];
  };
  "/maintenance/future/count": {
    get: operations["getCountFuture"];
  };
  "/maintenance/count": {
    get: operations["getCount_2"];
  };
  "/dataset": {
    get: operations["getTrailDatasetV"];
  };
  "/accessibility/unresolved": {
    get: operations["getNotSolved"];
  };
  "/accessibility/unresolved/{trailId}": {
    get: operations["getNotSolvedByTrailId"];
  };
  "/accessibility/solved": {
    get: operations["getSolved"];
  };
  "/accessibility/solved/{trailId}": {
    get: operations["getSolvedByTrailId"];
  };
  "/accessibility/count": {
    get: operations["getCount_3"];
  };
  "/maintenance/{id}": {
    delete: operations["deleteMaintenance"];
  };
  "/accessibility/{id}": {
    delete: operations["deleteAccessibilityNotification"];
  };
}

export interface components {
  schemas: {
    FileDetailsDto: {
      uploadedOn?: string;
      uploadedBy?: string;
      filename?: string;
      originalFilename?: string;
    };
    KeyValueDto: {
      key?: string;
      value?: string;
    };
    LinkedMediaDto: {
      id?: string;
      description?: string;
      keyVal?: components["schemas"]["KeyValueDto"][];
    };
    PlaceRefDto: {
      name?: string;
      trailCoordinates?: components["schemas"]["TrailCoordinatesDto"];
      placeId?: string;
    };
    TrailCoordinatesDto: {
      distanceFromTrailStart?: number;
      latitude?: number;
      longitude?: number;
      altitude?: number;
    };
    TrailImportDto: {
      code?: string;
      name?: string;
      description?: string;
      officialEta?: number;
      startLocation?: components["schemas"]["PlaceRefDto"];
      endLocation?: components["schemas"]["PlaceRefDto"];
      locations?: components["schemas"]["PlaceRefDto"][];
      classification?: "T" | "E" | "EE" | "EEA" | "UNCLASSIFIED";
      country?: string;
      coordinates?: components["schemas"]["TrailCoordinatesDto"][];
      maintainingSection?: string;
      territorialDivision?: string;
      linkedMediaDtos?: components["schemas"]["LinkedMediaDto"][];
      createdOn?: string;
      lastUpdate?: string;
      fileDetailsDto?: components["schemas"]["FileDetailsDto"];
      trailStatus?: "RAW" | "DRAFT" | "PUBLIC";
      variant?: boolean;
    };
    CycloDetailsDto: {
      cycloClassification?:
        | "TC"
        | "TC_PLUS"
        | "MC"
        | "MC_PLUS"
        | "BC"
        | "BC_PLUS"
        | "OC"
        | "OC_PLUS"
        | "EC"
        | "NO"
        | "UNCLASSIFIED";
      officialEta?: number;
      wayForward?: components["schemas"]["CycloFeasibilityDto"];
      wayBack?: components["schemas"]["CycloFeasibilityDto"];
      description?: string;
    };
    CycloFeasibilityDto: {
      feasible?: boolean;
      portage?: number;
    };
    StatsTrailMetadataDto: {
      totalRise?: number;
      totalFall?: number;
      eta?: number;
      length?: number;
      highestPlace?: number;
      lowestPlace?: number;
    };
    TrailDto: {
      id?: string;
      code?: string;
      name?: string;
      description?: string;
      variant?: boolean;
      officialEta?: number;
      startLocation?: components["schemas"]["PlaceRefDto"];
      endLocation?: components["schemas"]["PlaceRefDto"];
      locations?: components["schemas"]["PlaceRefDto"][];
      classification?: "T" | "E" | "EE" | "EEA" | "UNCLASSIFIED";
      country?: string;
      statsTrailMetadata?: components["schemas"]["StatsTrailMetadataDto"];
      coordinates?: components["schemas"]["TrailCoordinatesDto"][];
      mediaList?: components["schemas"]["LinkedMediaDto"][];
      lastUpdate?: string;
      createdOn?: string;
      territorialDivision?: string;
      maintainingSection?: string;
      status?: "RAW" | "DRAFT" | "PUBLIC";
      fileDetails?: components["schemas"]["FileDetailsDto"];
      cycloDetails?: components["schemas"]["CycloDetailsDto"];
    };
    TrailResponse: {
      currentPage?: number;
      totalPages?: number;
      size?: number;
      totalCount?: number;
      status?: "OK" | "ERROR";
      messages?: string[];
      content?: components["schemas"]["TrailDto"][];
    };
    CoordinatesDto: {
      longitude?: number;
      latitude?: number;
      altitude?: number;
    };
    PoiDto: {
      id?: string;
      name?: string;
      description?: string;
      tags?: string[];
      macroType?: "BELVEDERE" | "SUPPORT" | "CULTURAL";
      microType?: string[];
      mediaList?: components["schemas"]["LinkedMediaDto"][];
      trailIds?: string[];
      coordinates?: components["schemas"]["CoordinatesDto"];
      createdOn?: string;
      lastUpdatedOn?: string;
      externalResources?: string[];
      keyVal?: components["schemas"]["KeyValueDto"][];
    };
    PoiResponse: {
      currentPage?: number;
      totalPages?: number;
      size?: number;
      totalCount?: number;
      status?: "OK" | "ERROR";
      messages?: string[];
      content?: components["schemas"]["PoiDto"][];
    };
    PlaceDto: {
      id?: string;
      name?: string;
      description?: string;
      tags?: string[];
      mediaIds?: string[];
      coordinates?: components["schemas"]["CoordinatesDto"][];
      crossingTrailIds?: string[];
    };
    PlaceResponse: {
      currentPage?: number;
      totalPages?: number;
      size?: number;
      totalCount?: number;
      status?: "OK" | "ERROR";
      messages?: string[];
      content?: components["schemas"]["PlaceDto"][];
    };
    MaintenanceCreationDto: {
      date?: string;
      trailId?: string;
      meetingPlace?: string;
      description?: string;
      contact?: string;
    };
    MaintenanceDto: {
      id?: string;
      date?: string;
      trailId?: string;
      meetingPlace?: string;
      description?: string;
      contact?: string;
    };
    MaintenanceResponse: {
      currentPage?: number;
      totalPages?: number;
      size?: number;
      totalCount?: number;
      status?: "OK" | "ERROR";
      messages?: string[];
      content?: components["schemas"]["MaintenanceDto"][];
    };
    AccessibilityNotificationCreationDto: {
      trailId?: string;
      description?: string;
      reportDate?: string;
      coordinates?: components["schemas"]["CoordinatesDto"];
      minor?: boolean;
    };
    AccessibilityNotificationDto: {
      id?: string;
      description?: string;
      trailId?: string;
      reportDate?: string;
      resolutionDate?: string;
      minor?: boolean;
      resolution?: string;
      coordinates?: components["schemas"]["CoordinatesDto"];
    };
    AccessibilityResponse: {
      currentPage?: number;
      totalPages?: number;
      size?: number;
      totalCount?: number;
      status?: "OK" | "ERROR";
      messages?: string[];
      content?: components["schemas"]["AccessibilityNotificationDto"][];
    };
    Coordinates2D: {
      latitude?: number;
      longitude?: number;
      asList?: number[];
    };
    RectangleDto: {
      bottomLeft?: components["schemas"]["Coordinates2D"];
      topLeft?: components["schemas"]["Coordinates2D"];
      topRight?: components["schemas"]["Coordinates2D"];
      bottomRight?: components["schemas"]["Coordinates2D"];
    };
    UnLinkeMediaRequestDto: {
      id?: string;
    };
    PointGeolocationDto: {
      coordinatesDto?: components["schemas"]["CoordinatesDto"];
      distance?: number;
    };
    MediaDto: {
      creationDate?: string;
      id?: string;
      name?: string;
      fileName?: string;
      fileUrl?: string;
      mime?: string;
      fileSize?: number;
    };
    MediaResponse: {
      currentPage?: number;
      totalPages?: number;
      size?: number;
      totalCount?: number;
      status?: "OK" | "ERROR";
      messages?: string[];
      content?: components["schemas"]["MediaDto"][];
    };
    TrailRawDto: {
      id?: string;
      name?: string;
      description?: string;
      startPos?: components["schemas"]["TrailCoordinatesDto"];
      finalPos?: components["schemas"]["TrailCoordinatesDto"];
      coordinates?: components["schemas"]["TrailCoordinatesDto"][];
      fileDetails?: components["schemas"]["FileDetailsDto"];
    };
    TrailRawResponse: {
      currentPage?: number;
      totalPages?: number;
      size?: number;
      totalCount?: number;
      status?: "OK" | "ERROR";
      messages?: string[];
      content?: components["schemas"]["TrailRawDto"][];
    };
    GeoLineDto: {
      coordinates?: components["schemas"]["Coordinates2D"][];
    };
    TrailIntersectionDto: {
      points?: components["schemas"]["CoordinatesDto"][];
      trail?: components["schemas"]["TrailDto"];
    };
    TrailIntersectionResponse: {
      currentPage?: number;
      totalPages?: number;
      size?: number;
      totalCount?: number;
      status?: "OK" | "ERROR";
      messages?: string[];
      content?: components["schemas"]["TrailIntersectionDto"][];
    };
    AccessibilityNotificationResolutionDto: {
      id?: string;
      resolution?: string;
      resolutionDate?: string;
    };
    CountDto: {
      count?: number;
    };
    CountResponse: {
      status?: "OK" | "ERROR";
      message?: string[];
      content?: components["schemas"]["CountDto"];
    };
    TrailPreviewDto: {
      id?: string;
      code?: string;
      classification?: "T" | "E" | "EE" | "EEA" | "UNCLASSIFIED";
      startPos?: components["schemas"]["PlaceRefDto"];
      finalPos?: components["schemas"]["PlaceRefDto"];
      bikeData?: boolean;
      trailStatus?: "RAW" | "DRAFT" | "PUBLIC";
      fileDetails?: components["schemas"]["FileDetailsDto"];
    };
    TrailPreviewResponse: {
      currentPage?: number;
      totalPages?: number;
      size?: number;
      totalCount?: number;
      status?: "OK" | "ERROR";
      messages?: string[];
      content?: components["schemas"]["TrailPreviewDto"][];
    };
    TrailDatasetVersion: {
      version?: number;
      lastUpdate?: string;
    };
  };
}

export interface operations {
  importTrail: {
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["TrailResponse"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["TrailImportDto"];
      };
    };
  };
  get_2: {
    parameters: {
      query: {
        skip?: number;
        limit?: number;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["PoiResponse"];
        };
      };
    };
  };
  upsertPoi: {
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["PoiResponse"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PoiDto"];
      };
    };
  };
  addMediaToPoi: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["PoiResponse"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["LinkedMediaDto"];
      };
    };
  };
  removeMediaFromPoi: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["PoiResponse"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UnLinkeMediaRequestDto"];
      };
    };
  };
  get_4: {
    parameters: {
      query: {
        skip?: number;
        limit?: number;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["PlaceResponse"];
        };
      };
    };
  };
  create: {
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["PlaceResponse"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PlaceDto"];
      };
    };
  };
  update: {
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["PlaceResponse"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PlaceDto"];
      };
    };
  };
  addMedia: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["PlaceResponse"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["LinkedMediaDto"];
      };
    };
  };
  deleteMedia: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["PlaceResponse"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UnLinkeMediaRequestDto"];
      };
    };
  };
  create_1: {
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["MaintenanceResponse"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["MaintenanceCreationDto"];
      };
    };
  };
  createAccessibilityNotification: {
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["AccessibilityResponse"];
          "application/xml": components["schemas"]["AccessibilityResponse"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AccessibilityNotificationCreationDto"];
        "application/xml": components["schemas"]["AccessibilityNotificationCreationDto"];
      };
    };
  };
  get: {
    parameters: {
      query: {
        skip?: number;
        limit?: number;
        light?: boolean;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["TrailResponse"];
        };
      };
    };
  };
  updateTrail: {
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["TrailResponse"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["TrailDto"];
      };
    };
  };
  getByPlaceId: {
    parameters: {
      path: {
        id: string;
      };
      query: {
        light?: boolean;
        skip?: number;
        limit?: number;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["TrailResponse"];
        };
      };
    };
  };
  addPlaceToTrail: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["TrailResponse"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PlaceRefDto"];
      };
    };
  };
  removePlaceFromTrail: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["TrailResponse"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PlaceRefDto"];
      };
    };
  };
  addMediaToTrail: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["TrailResponse"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["LinkedMediaDto"];
      };
    };
  };
  removeMediaFromTrail: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["TrailResponse"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UnLinkeMediaRequestDto"];
      };
    };
  };
  geoLocateTrail: {
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["TrailResponse"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["RectangleDto"];
      };
    };
  };
  geolocatePlace: {
    parameters: {
      query: {
        skip?: number;
        limit?: number;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["PlaceResponse"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PointGeolocationDto"];
      };
    };
  };
  upload: {
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["MediaResponse"];
        };
      };
    };
  };
  readGpxFile: {
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["TrailRawResponse"];
        };
      };
    };
    requestBody: {
      content: {
        "multipart/form-data": {
          file?: string;
        };
      };
    };
  };
  readBulkGpxFile: {
    parameters: {
      query: {
        files: string[];
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "application/json": components["schemas"]["TrailRawResponse"];
        };
      };
    };
  };
  findTrailIntersection: {
    parameters: {
      query: {
        skip?: number;
        limit?: number;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["TrailIntersectionResponse"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["GeoLineDto"];
      };
    };
  };
  resolveNotification: {
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["AccessibilityResponse"];
        };
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AccessibilityNotificationResolutionDto"];
      };
    };
  };
  getById: {
    parameters: {
      path: {
        id: string;
      };
      query: {
        light?: boolean;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["TrailResponse"];
        };
      };
    };
  };
  deleteById: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["TrailResponse"];
        };
      };
    };
  };
  getCount: {
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["CountResponse"];
        };
      };
    };
  };
  get_1: {
    parameters: {
      query: {
        skip?: number;
        limit?: number;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["TrailRawResponse"];
        };
      };
    };
  };
  getById_1: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["TrailRawResponse"];
        };
      };
    };
  };
  deleteById_1: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["TrailRawResponse"];
        };
      };
    };
  };
  getTrailPreviews: {
    parameters: {
      query: {
        skip?: number;
        limit?: number;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["TrailPreviewResponse"];
        };
      };
    };
  };
  getPreviewById: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["TrailPreviewResponse"];
        };
      };
    };
  };
  getRawTrailPreviews: {
    parameters: {
      query: {
        skip?: number;
        limit?: number;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["TrailPreviewResponse"];
        };
      };
    };
  };
  get_3: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["PoiResponse"];
        };
      };
    };
  };
  deletePoi: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["PoiResponse"];
        };
      };
    };
  };
  getByMacro: {
    parameters: {
      path: {
        type: string;
      };
      query: {
        skip?: number;
        limit?: number;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["PoiResponse"];
        };
      };
    };
  };
  getByNameOrTags: {
    parameters: {
      path: {
        name: string;
      };
      query: {
        skip?: number;
        limit?: number;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["PoiResponse"];
        };
      };
    };
  };
  getCount_1: {
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["CountResponse"];
        };
      };
    };
  };
  getByTrail: {
    parameters: {
      path: {
        code: string;
      };
      query: {
        skip?: number;
        limit?: number;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["PoiResponse"];
        };
      };
    };
  };
  get_5: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["PlaceResponse"];
        };
      };
    };
  };
  delete: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["PlaceResponse"];
        };
      };
    };
  };
  getLikeNameOrTags: {
    parameters: {
      path: {
        name: string;
      };
      query: {
        skip?: number;
        limit?: number;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["PlaceResponse"];
        };
      };
    };
  };
  getById_2: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["MediaResponse"];
        };
      };
    };
  };
  deleteById_2: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["MediaResponse"];
        };
      };
    };
  };
  getPastMaintenance: {
    parameters: {
      query: {
        skip?: number;
        limit?: number;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["MaintenanceResponse"];
        };
      };
    };
  };
  getPastMaintenanceById: {
    parameters: {
      path: {
        id: string;
      };
      query: {
        skip?: number;
        limit?: number;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["MaintenanceResponse"];
        };
      };
    };
  };
  getCountPast: {
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["CountResponse"];
        };
      };
    };
  };
  getFutureMaintenance: {
    parameters: {
      query: {
        skip?: number;
        limit?: number;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["MaintenanceResponse"];
        };
      };
    };
  };
  getCountFuture: {
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["CountResponse"];
        };
      };
    };
  };
  getCount_2: {
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["CountResponse"];
        };
      };
    };
  };
  getTrailDatasetV: {
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["TrailDatasetVersion"];
        };
      };
    };
  };
  getNotSolved: {
    parameters: {
      query: {
        skip?: number;
        limit?: number;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["AccessibilityResponse"];
        };
      };
    };
  };
  getNotSolvedByTrailId: {
    parameters: {
      path: {
        trailId: string;
      };
      query: {
        skip?: number;
        limit?: number;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["AccessibilityResponse"];
        };
      };
    };
  };
  getSolved: {
    parameters: {
      query: {
        skip?: number;
        limit?: number;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["AccessibilityResponse"];
        };
      };
    };
  };
  getSolvedByTrailId: {
    parameters: {
      path: {
        trailId: string;
      };
      query: {
        skip?: number;
        limit?: number;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["AccessibilityResponse"];
        };
      };
    };
  };
  getCount_3: {
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["CountResponse"];
        };
      };
    };
  };
  deleteMaintenance: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["MaintenanceResponse"];
        };
      };
    };
  };
  deleteAccessibilityNotification: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          "*/*": components["schemas"]["AccessibilityResponse"];
        };
      };
    };
  };
}
